// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DesignResponseDataModel;
//
//    var designData = DesignData.FromJson(jsonString);

namespace DesignResponseDataModel
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class DesignData
    {
        [JsonProperty("coordination", NullValueHandling = NullValueHandling.Ignore)]
        public string Coordination { get; set; }

        [JsonProperty("cubicColumns", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> CubicColumns { get; set; }

        [JsonProperty("doors", NullValueHandling = NullValueHandling.Ignore)]
        public List<Door> Doors { get; set; }

        [JsonProperty("labels", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Labels { get; set; }

        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public DesignDataMeta Meta { get; set; }

        [JsonProperty("requirement", NullValueHandling = NullValueHandling.Ignore)]
        public DesignDataRequirement Requirement { get; set; }

        [JsonProperty("rooms", NullValueHandling = NullValueHandling.Ignore)]
        public List<Room> Rooms { get; set; }

        [JsonProperty("rotation", NullValueHandling = NullValueHandling.Ignore)]
        public long? Rotation { get; set; }

        [JsonProperty("templateFilters", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> TemplateFilters { get; set; }

        [JsonProperty("version", NullValueHandling = NullValueHandling.Ignore)]
        public long? Version { get; set; }

        [JsonProperty("walls", NullValueHandling = NullValueHandling.Ignore)]
        public List<Wall> Walls { get; set; }

        [JsonProperty("windows", NullValueHandling = NullValueHandling.Ignore)]
        public List<WindowItem> Windows { get; set; }
    }

    public partial class Door
    {
        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }

        [JsonProperty("kind", NullValueHandling = NullValueHandling.Ignore)]
        public string Kind { get; set; }

        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public DoorMeta Meta { get; set; }

        [JsonProperty("openDirection", NullValueHandling = NullValueHandling.Ignore)]
        public string OpenDirection { get; set; }

        [JsonProperty("p1", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P1 { get; set; }

        [JsonProperty("p2", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P2 { get; set; }

        [JsonProperty("sillHeight", NullValueHandling = NullValueHandling.Ignore)]
        public long? SillHeight { get; set; }
    }

    public partial class DoorMeta
    {
        [JsonProperty("entrance", NullValueHandling = NullValueHandling.Ignore)]
        public long? Entrance { get; set; }

        [JsonProperty("p1LeafPoint")]
        public P1 P1LeafPoint { get; set; }

        [JsonProperty("relatedRooms", NullValueHandling = NullValueHandling.Ignore)]
        public RelatedRooms RelatedRooms { get; set; }

        [JsonProperty("thickness", NullValueHandling = NullValueHandling.Ignore)]
        public long? Thickness { get; set; }
    }

    public partial class P1
    {
        [JsonProperty("x", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? X { get; set; }

        [JsonProperty("y", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? Y { get; set; }
    }

    public partial class RelatedRooms
    {
        [JsonProperty("inward")]
        public string Inward { get; set; }

        [JsonProperty("outward")]
        public string Outward { get; set; }
    }

    public partial class DesignDataMeta
    {
        [JsonProperty("cornerSurfaces", NullValueHandling = NullValueHandling.Ignore)]
        public List<Surface> CornerSurfaces { get; set; }

        [JsonProperty("defaultPerspective", NullValueHandling = NullValueHandling.Ignore)]
        public DefaultPerspective DefaultPerspective { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("outerSurfaces", NullValueHandling = NullValueHandling.Ignore)]
        public List<Surface> OuterSurfaces { get; set; }

        [JsonProperty("outerWalls", NullValueHandling = NullValueHandling.Ignore)]
        public List<Wall> OuterWalls { get; set; }
    }

    public partial class Surface
    {
        [JsonProperty("holes", NullValueHandling = NullValueHandling.Ignore)]
        public List<Hole> Holes { get; set; }

        [JsonProperty("kind", NullValueHandling = NullValueHandling.Ignore)]
        public string Kind { get; set; }

        [JsonProperty("material")]
        public MaterialDetail Material { get; set; }

        [JsonProperty("p1", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P1 { get; set; }

        [JsonProperty("p2", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P2 { get; set; }
    }

    public partial class Hole
    {
        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }

        [JsonProperty("p1", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P1 { get; set; }

        [JsonProperty("p2", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P2 { get; set; }

        [JsonProperty("sillHeight", NullValueHandling = NullValueHandling.Ignore)]
        public long? SillHeight { get; set; }
    }
    public partial class MaterialDetail
    {
        public void CopyProperties(MaterialDetail md)
        {
            this.BaseMaterialId = md.BaseMaterialId;
            this.CategoryId = md.CategoryId;
            this.DiffuseMap = md.DiffuseMap;
            this.Function = md.Function;
            this.Label = md.Label;
            this.DiffuseMaterialId = md.DiffuseMaterialId;
            this.Shader = md.Shader;
            this.RenderType = md.RenderType;
            this.NormalMap = md.NormalMap;
            this.HeightMap = md.HeightMap;
            this.RoughnessMap = md.RoughnessMap;
            this.MetallicMap = md.MetallicMap;
        }

    }
    public partial class MaterialDetail
    {
        [JsonProperty("function", NullValueHandling = NullValueHandling.Ignore)]
        public string Function { get; set; }

        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("diffuseMaterialId", NullValueHandling = NullValueHandling.Ignore)]
        public string DiffuseMaterialId { get; set; }

        [JsonProperty("categoryId", NullValueHandling = NullValueHandling.Ignore)]
        public string CategoryId { get; set; }

        [JsonProperty("diffuseMap", NullValueHandling = NullValueHandling.Ignore)]
        public Uri DiffuseMap { get; set; }

        [JsonProperty("baseMaterialId", NullValueHandling = NullValueHandling.Ignore)]
        public string BaseMaterialId { get; set; }

        [JsonProperty("shader", NullValueHandling = NullValueHandling.Ignore)]
        public string Shader { get; set; }

        [JsonProperty("renderType", NullValueHandling = NullValueHandling.Ignore)]
        public string RenderType { get; set; }

        [JsonProperty("normalMap", NullValueHandling = NullValueHandling.Ignore)]
        public string NormalMap { get; set; }

        [JsonProperty("heightMap", NullValueHandling = NullValueHandling.Ignore)]
        public Uri HeightMap { get; set; }

        [JsonProperty("roughnessMap", NullValueHandling = NullValueHandling.Ignore)]
        public Uri RoughnessMap { get; set; }

        [JsonProperty("metallicMap", NullValueHandling = NullValueHandling.Ignore)]
        public Uri MetallicMap { get; set; }
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }
    }

    public partial class DefaultPerspective
    {
        [JsonProperty("p1", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P1 { get; set; }

        [JsonProperty("p2", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P2 { get; set; }
    }

    public partial class Wall
    {
        [JsonProperty("kind", NullValueHandling = NullValueHandling.Ignore)]
        public string Kind { get; set; }

        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public WallMeta Meta { get; set; }

        [JsonProperty("p1", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P1 { get; set; }

        [JsonProperty("p2", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P2 { get; set; }

        [JsonProperty("thickness", NullValueHandling = NullValueHandling.Ignore)]
        public long? Thickness { get; set; }
    }

    public partial class WallMeta
    {
        [JsonProperty("height")]
        public object Height { get; set; }

        [JsonProperty("outer", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Outer { get; set; }

        [JsonProperty("p1Padding", NullValueHandling = NullValueHandling.Ignore)]
        public Padding P1Padding { get; set; }

        [JsonProperty("p2Padding", NullValueHandling = NullValueHandling.Ignore)]
        public Padding P2Padding { get; set; }
    }

    public partial class Padding
    {
        [JsonProperty("left", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? Left { get; set; }

        [JsonProperty("right", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? Right { get; set; }
    }

    public partial class DesignDataRequirement
    {
    }

    public partial class Room
    {
        [JsonProperty("designs", NullValueHandling = NullValueHandling.Ignore)]
        public List<Design> Designs { get; set; }

        [JsonProperty("doors", NullValueHandling = NullValueHandling.Ignore)]
        public List<Door> Doors { get; set; }

        [JsonProperty("hash", NullValueHandling = NullValueHandling.Ignore)]
        public string Hash { get; set; }

        [JsonProperty("kind", NullValueHandling = NullValueHandling.Ignore)]
        public string Kind { get; set; }

        [JsonProperty("materials", NullValueHandling = NullValueHandling.Ignore)]
        public Materials Materials { get; set; }

        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public RoomMeta Meta { get; set; }

        [JsonProperty("requirement", NullValueHandling = NullValueHandling.Ignore)]
        public RoomRequirement Requirement { get; set; }

        [JsonProperty("templateFilters", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> TemplateFilters { get; set; }

        [JsonProperty("walls", NullValueHandling = NullValueHandling.Ignore)]
        public List<Wall> Walls { get; set; }

        [JsonProperty("windows", NullValueHandling = NullValueHandling.Ignore)]
        public List<WindowItem> Windows { get; set; }
    }

    public partial class Design
    {
        [JsonProperty("furnidules", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Furnidules { get; set; }

        [JsonProperty("furniture", NullValueHandling = NullValueHandling.Ignore)]
        public Furniture Furniture { get; set; }

        [JsonProperty("templateFilters", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> TemplateFilters { get; set; }
    }

    public partial class Furniture
    {
        [JsonProperty("basic", NullValueHandling = NullValueHandling.Ignore)]
        public List<Basic> Basic { get; set; }

        [JsonProperty("ceiling", NullValueHandling = NullValueHandling.Ignore)]
        public List<Basic> Ceiling { get; set; }

        [JsonProperty("child", NullValueHandling = NullValueHandling.Ignore)]
        public List<Basic> Child { get; set; }

        [JsonProperty("debug", NullValueHandling = NullValueHandling.Ignore)]
        public List<Basic> Debug { get; set; }

        [JsonProperty("floor", NullValueHandling = NullValueHandling.Ignore)]
        public List<Basic> Floor { get; set; }

        [JsonProperty("hard", NullValueHandling = NullValueHandling.Ignore)]
        public List<Basic> Hard { get; set; }

        [JsonProperty("wall", NullValueHandling = NullValueHandling.Ignore)]
        public List<Basic> Wall { get; set; }
    }

    public partial class Basic
    {
        [JsonProperty("loaded", NullValueHandling = NullValueHandling.Ignore)]
        public bool Loaded = false;
        [JsonProperty("hash", NullValueHandling = NullValueHandling.Ignore)]
        public string Hash { get; set; }

        [JsonProperty("model", NullValueHandling = NullValueHandling.Ignore)]
        public Model Model { get; set; }

        [JsonProperty("parent")]
        public object Parent { get; set; }

        [JsonProperty("rotation", NullValueHandling = NullValueHandling.Ignore)]
        public long? Rotation { get; set; }

        [JsonProperty("x", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? X { get; set; }

        [JsonProperty("y", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? Y { get; set; }

        [JsonProperty("z")]
        public long? Z { get; set; }
        [JsonProperty("customizedRotation", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? CustomizedRotation { get; set; }
        [JsonProperty("isDelete", NullValueHandling = NullValueHandling.Ignore)]
        public bool IsDelete { get; set; }
    }

    public partial class Model
    {
        [JsonProperty("xSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? XSize { get; set; }

        [JsonProperty("ySize", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? YSize { get; set; }

        [JsonProperty("zSize")]
        public long? ZSize { get; set; }

        [JsonProperty("furnitureId", NullValueHandling = NullValueHandling.Ignore)]
        public string FurnitureId { get; set; }

        [JsonProperty("categoryId", NullValueHandling = NullValueHandling.Ignore)]
        public string CategoryId { get; set; }
    }

    public partial class Materials
    {
        [JsonProperty("ceiling", NullValueHandling = NullValueHandling.Ignore)]
        public MaterialDetail Ceiling { get; set; }

        [JsonProperty("doorPocket", NullValueHandling = NullValueHandling.Ignore)]
        public MaterialDetail DoorPocket { get; set; }

        [JsonProperty("floor", NullValueHandling = NullValueHandling.Ignore)]
        public MaterialDetail Floor { get; set; }

        [JsonProperty("moulding", NullValueHandling = NullValueHandling.Ignore)]
        public MaterialDetail Moulding { get; set; }

        [JsonProperty("stone", NullValueHandling = NullValueHandling.Ignore)]
        public MaterialDetail Stone { get; set; }

        [JsonProperty("windowFrame", NullValueHandling = NullValueHandling.Ignore)]
        public MaterialDetail WindowFrame { get; set; }

        [JsonProperty("windowSill", NullValueHandling = NullValueHandling.Ignore)]
        public MaterialDetail WindowSill { get; set; }
    }

    //public partial class MaterialDetail
    //{
    //    [JsonProperty("diffuseMaterialId", NullValueHandling = NullValueHandling.Ignore)]
    //    public string DiffuseMaterialId { get; set; }

    //    [JsonProperty("categoryId", NullValueHandling = NullValueHandling.Ignore)]
    //    public string CategoryId { get; set; }

    //    [JsonProperty("diffuseMap", NullValueHandling = NullValueHandling.Ignore)]
    //    public string DiffuseMap { get; set; }

    //    [JsonProperty("baseMaterialId", NullValueHandling = NullValueHandling.Ignore)]
    //    public string BaseMaterialId { get; set; }

    //    [JsonProperty("shader", NullValueHandling = NullValueHandling.Ignore)]
    //    public string Shader { get; set; }

    //    [JsonProperty("renderType", NullValueHandling = NullValueHandling.Ignore)]
    //    public string RenderType { get; set; }

    //    [JsonProperty("normalMap", NullValueHandling = NullValueHandling.Ignore)]
    //    public string NormalMap { get; set; }

    //    [JsonProperty("heightMap", NullValueHandling = NullValueHandling.Ignore)]
    //    public string HeightMap { get; set; }

    //    [JsonProperty("roughnessMap", NullValueHandling = NullValueHandling.Ignore)]
    //    public string RoughnessMap { get; set; }

    //    [JsonProperty("metallicMap", NullValueHandling = NullValueHandling.Ignore)]
    //    public string MetallicMap { get; set; }
    //}

    public partial class RoomMeta
    {
        [JsonProperty("baseboards", NullValueHandling = NullValueHandling.Ignore)]
        public List<Baseboard> Baseboards { get; set; }

        [JsonProperty("defaultPerspective", NullValueHandling = NullValueHandling.Ignore)]
        public DefaultPerspective DefaultPerspective { get; set; }

        [JsonProperty("entranceDoors", NullValueHandling = NullValueHandling.Ignore)]
        public List<Door> EntranceDoors { get; set; }

        [JsonProperty("reflections", NullValueHandling = NullValueHandling.Ignore)]
        public List<Reflection> Reflections { get; set; }

        [JsonProperty("surfaces", NullValueHandling = NullValueHandling.Ignore)]
        public List<Surface> Surfaces { get; set; }
    }

    public partial class Baseboard
    {
        [JsonProperty("dado", NullValueHandling = NullValueHandling.Ignore)]
        public Dado Dado { get; set; }

        [JsonProperty("p1", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P1 { get; set; }

        [JsonProperty("p2", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P2 { get; set; }

        [JsonProperty("skirting", NullValueHandling = NullValueHandling.Ignore)]
        public Dado Skirting { get; set; }
    }

    public partial class Dado
    {
        [JsonProperty("display", NullValueHandling = NullValueHandling.Ignore)]
        public bool Display { get; set; }

        [JsonProperty("material", NullValueHandling = NullValueHandling.Ignore)]
        public MaterialDetail Material { get; set; }
    }

    public partial class Reflection
    {
        [JsonProperty("x", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? X { get; set; }

        [JsonProperty("xSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? XSize { get; set; }

        [JsonProperty("y", NullValueHandling = NullValueHandling.Ignore)]
        public decimal? Y { get; set; }

        [JsonProperty("ySize", NullValueHandling = NullValueHandling.Ignore)]
        public long? YSize { get; set; }
    }

    public partial class RoomRequirement
    {
        [JsonProperty("bedCount", NullValueHandling = NullValueHandling.Ignore)]
        public BedCount BedCount { get; set; }

        [JsonProperty("furnidules", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> Furnidules { get; set; }
    }

    public partial class BedCount
    {
        [JsonProperty("single", NullValueHandling = NullValueHandling.Ignore)]
        public long? Single { get; set; }

        [JsonProperty("baby", NullValueHandling = NullValueHandling.Ignore)]
        public long? Baby { get; set; }

        [JsonProperty("twin", NullValueHandling = NullValueHandling.Ignore)]
        public long? Twin { get; set; }
    }

    public partial class WindowMeta
    {
        [JsonProperty("bayWall")]
        public Wall BayWall { get; set; }

        [JsonProperty("outerVector")]
        public WindowItem OuterVector { get; set; }

        [JsonProperty("relatedRooms", NullValueHandling = NullValueHandling.Ignore)]
        public RelatedRooms RelatedRooms { get; set; }

        [JsonProperty("thickness", NullValueHandling = NullValueHandling.Ignore)]
        public long? Thickness { get; set; }
    }

    public partial class WindowItem
    {
        [JsonProperty("bayDepth", NullValueHandling = NullValueHandling.Ignore)]
        public long? BayDepth { get; set; }

        [JsonProperty("handlePosition", NullValueHandling = NullValueHandling.Ignore)]
        public string HandlePosition { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }

        [JsonProperty("kind", NullValueHandling = NullValueHandling.Ignore)]
        public string Kind { get; set; }

        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public WindowMeta Meta { get; set; }

        [JsonProperty("openDirection", NullValueHandling = NullValueHandling.Ignore)]
        public string OpenDirection { get; set; }

        [JsonProperty("p1", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P1 { get; set; }

        [JsonProperty("p2", NullValueHandling = NullValueHandling.Ignore)]
        public P1 P2 { get; set; }

        [JsonProperty("sillHeight", NullValueHandling = NullValueHandling.Ignore)]
        public long? SillHeight { get; set; }
    }

    public partial class DesignData
    {
        public static DesignData FromJson(string json)
        {
            return JsonConvert.DeserializeObject<DesignData>(json, DesignResponseDataModel.Converter.Settings);
        }
    }

    public static class Serialize
    {
        public static string ToJson(this DesignData self)
        {
            return JsonConvert.SerializeObject(self, DesignResponseDataModel.Converter.Settings);
        }
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
